{
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='nodeCondition', url='', help='"NodeCondition contains condition information for a node."'),
  '#withLastHeartbeatTime':: d.fn(help='"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers."', args=[d.arg(name='lastHeartbeatTime', type=d.T.string)]),
  withLastHeartbeatTime(lastHeartbeatTime): { lastHeartbeatTime: lastHeartbeatTime },
  '#withLastTransitionTime':: d.fn(help='"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers."', args=[d.arg(name='lastTransitionTime', type=d.T.string)]),
  withLastTransitionTime(lastTransitionTime): { lastTransitionTime: lastTransitionTime },
  '#withMessage':: d.fn(help='"Human readable message indicating details about last transition."', args=[d.arg(name='message', type=d.T.string)]),
  withMessage(message): { message: message },
  '#withReason':: d.fn(help="\"(brief) reason for the condition's last transition.\"", args=[d.arg(name='reason', type=d.T.string)]),
  withReason(reason): { reason: reason },
  '#withType':: d.fn(help='"Type of node condition.\\n\\nPossible enum values:\\n - `\\"DiskPressure\\"` means the kubelet is under pressure due to insufficient available disk.\\n - `\\"MemoryPressure\\"` means the kubelet is under pressure due to insufficient available memory.\\n - `\\"NetworkUnavailable\\"` means that network for the node is not correctly configured.\\n - `\\"PIDPressure\\"` means the kubelet is under pressure due to insufficient available PID.\\n - `\\"Ready\\"` means kubelet is healthy and ready to accept pods."', args=[d.arg(name='type', type=d.T.string)]),
  withType(type): { type: type },
  '#mixin': 'ignore',
  mixin: self,
}
